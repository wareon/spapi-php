<?php
/**
* This class is autogenerated by the Spapi class generator
* Date of generation: 2020-12-22
* Specification: ttps://github.com/amzn/selling-partner-api-models/blob/main/models/product-pricing-api-model/productPricingV0.json
* Source MD5 signature: 261e37b61d0a2850484b36170926a509
*
*
* Selling Partner API for Pricing
* The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
*/
namespace DoubleBreak\Spapi\Api;
use DoubleBreak\Spapi\Client;

class ProductPricing extends Client {

  /**
  * Operation getPricing
  *
  * @param array $queryParams
  *    - *marketplaceId* string - A marketplace identifier. Specifies the marketplace for which prices are returned.
  *    - *asins* array - A list of up to twenty Amazon Standard Identification Number (ASIN) values used to identify items in the given marketplace.
  *    - *skus* array - A list of up to twenty seller SKU values used to identify items in the given marketplace.
  *    - *itemType* string - Indicates whether ASIN values or seller SKU values are used to identify items. If you specify Asin, the information in the response will be dependent on the list of Asins you provide in the Asins parameter. If you specify Sku, the information in the response will be dependent on the list of Skus you provide in the Skus parameter.
  *    - *itemCondition* string - Filters the offer listings based on item condition. Possible values: New, Used, Collectible, Refurbished, Club.
   * @param string $version
   * @return mixed
  */
  public function getPricing($queryParams = [], $version = 'v0')
  {
    return $this->send("/products/pricing/{$version}/price", [
      'method' => 'GET',
      'query' => $queryParams,
    ]);
  }

  /**
  * Operation getCompetitivePricing
  *
  * @param array $queryParams
  *    - *marketplaceId* string - A marketplace identifier. Specifies the marketplace for which prices are returned.
  *    - *asins* array - A list of up to twenty Amazon Standard Identification Number (ASIN) values used to identify items in the given marketplace.
  *    - *skus* array - A list of up to twenty seller SKU values used to identify items in the given marketplace.
  *    - *itemType* string - Indicates whether ASIN values or seller SKU values are used to identify items. If you specify Asin, the information in the response will be dependent on the list of Asins you provide in the Asins parameter. If you specify Sku, the information in the response will be dependent on the list of Skus you provide in the Skus parameter. Possible values: Asin, Sku.
   * @param string $version
   * @return mixed
  */
  public function getCompetitivePricing($queryParams = [], $version = 'v0')
  {
    return $this->send("/products/pricing/{$version}/competitivePrice", [
      'method' => 'GET',
      'query' => $queryParams,
    ]);
  }

  /**
  * Operation getListingOffers
  *
  * @param string $sellerSKU Identifies an item in the given marketplace. SellerSKU is qualified by the seller's SellerId, which is included with every operation that you submit.
  *
  * @param array $queryParams
  *    - *marketplaceId* string - A marketplace identifier. Specifies the marketplace for which prices are returned.
  *    - *itemCondition* string - Filters the offer listings based on item condition. Possible values: New, Used, Collectible, Refurbished, Club.
   * @param string $version
   * @return mixed
  */
  public function getListingOffers($sellerSKU, $queryParams = [], $version = 'v0')
  {
    return $this->send("/products/pricing/{$version}/listings/{$sellerSKU}/offers", [
      'method' => 'GET',
      'query' => $queryParams,
    ]);
  }

  /**
  * Operation getItemOffers
  *
  * @param string $asin The Amazon Standard Identification Number (ASIN) of the item.
  *
  * @param array $queryParams
  *    - *marketplaceId* string - A marketplace identifier. Specifies the marketplace for which prices are returned.
  *    - *itemCondition* string - Filters the offer listings to be considered based on item condition. Possible values: New, Used, Collectible, Refurbished, Club.
   * @param string $version
   * @return mixed
  */
  public function getItemOffers($asin, $queryParams = [], $version = 'v0')
  {
    return $this->send("/products/pricing/{$version}/items/{$asin}/offers", [
      'method' => 'GET',
      'query' => $queryParams,
    ]);
  }
}
